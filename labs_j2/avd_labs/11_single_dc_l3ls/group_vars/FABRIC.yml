---
# Ansible connectivity definitions
# eAPI connectivity via HTTPS is specified (as opposed to CLI via SSH)
ansible_connection: ansible.netcommon.httpapi
# Specifies that we are indeed using Arista EOS
ansible_network_os: arista.eos.eos
# This user/password must exist on the switches to enable Ansible access
ansible_user: ansible
ansible_password: ansible
# User escalation (to enter enable mode)
ansible_become: true
ansible_become_method: enable
# Use SSL (HTTPS)
ansible_httpapi_use_ssl: true
# Do not try to validate certs
ansible_httpapi_validate_certs: false

# add ciphers to communicate over httpapi towards the EOS device.
ansible_httpapi_ciphers: AES256-SHA:DHE-RSA-AES256-SHA:AES128-SHA:DHE-RSA-AES128-SHA


# Local users
local_users:
  # Define a new user, which is called "ansible"
  - name: ansible
    privilege: 15
    role: network-admin
    # Password set to "ansible". Same string as the device generates when configuring a username.
    sha512_password: $6$7u4j1rkb3VELgcZE$EJt2Qff8kd/TapRoci0XaIZsL4tFzgq1YZBLD9c6f/knXzvcYY0NcMKndZeCv0T268knGKhOEwZAxqKjlMm920
  - name: admin
    privilege: 15
    role: network-admin
    no_password: true

# AAA Authorization
aaa_authorization:
  exec:
    default: local
    
# OOB Management network default gateway.
mgmt_gateway: 172.16.2.1
mgmt_interface: Management0
mgmt_interface_vrf: MGMT

# DNS Server
name_servers:
  - 1.1.1.1
  - 8.8.8.8

ntp:
  servers:
  - name: time.google.com
    preferred: true
    vrf: MGMT
    iburst: true

service_routing_protocols_model: multi-agent

custom_structured_configuration_spanning_tree:
  mode: mstp

ip_routing: true

# # Management eAPI | Required for this Lab
# custom_structured_configuration_management_api_http:
#   https_ssl_profile: eAPI

# # Management security required for SSL profile with strong ciphers
# custom_structured_configuration_management_security:
#   ssl_profiles:
#     - name: eAPI
#       certificate:
#         file: eAPI.crt
#         key: eAPI.key
#       cipher_list: 'HIGH:!eNULL:!aNULL:!MD5:!ADH:!ANULL'

# BGP defaults
bgp_default_ipv4_unicast: false
bgp_update_wait_install: false
bgp_update_wait_for_convergence: false
bgp_distance:
  external_routes: 20
  internal_routes: 200
  local_routes: 200
  
# Common AVD group variables
fabric_name: FABRIC

# Define underlay and overlay routing protocol to be used
underlay_routing_protocol: ebgp
overlay_routing_protocol: ebgp

# BGP peer groups passwords
bgp_peer_groups:
  # all passwords set to "arista"
  evpn_overlay_peers:
    password: Q4fqtbqcZ7oQuKfuWtNGRQ==
  ipv4_underlay_peers:
    password: 7x4B4rnJhZB438m9+BrBfQ==
  mlag_ipv4_underlay_peer:
    password: 4b21pAdCvWeAqpcKDFMdWw==

# P2P interfaces MTU, includes VLANs 4093 and 4094 that are over peer-link
# If you're running vEOS-lab or cEOS, you should use MTU of 1500 instead as shown in the following line
# p2p_uplinks_mtu: 9214
p2p_uplinks_mtu: 1500

# Set default uplink, downlink, and MLAG interfaces based on node type
default_interfaces:
  - types: [ spine ]
    platforms: [ default ]
    uplink_interfaces: [ Ethernet1-2 ]
    downlink_interfaces: [ Ethernet1-8 ]
  - types: [ l3leaf ]
    platforms: [ default ]
    uplink_interfaces: [ Ethernet1-2 ]
    mlag_interfaces: [ Ethernet3-4 ]
    downlink_interfaces: [ Ethernet8 ]
  - types: [ l2leaf ]
    platforms: [ default ]
    uplink_interfaces: [ Ethernet1-2 ]

# CloudVision Portal definitions
cvp_instance_ips:
  - 192.168.1.12
terminattr_smashexcludes: "ale,flexCounter,hardware,kni,pulse,strata"
terminattr_ingestexclude: "/Sysdb/cell/1/agent,/Sysdb/cell/2/agent"
terminattr_disable_aaa: true

