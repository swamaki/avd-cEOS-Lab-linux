router_bgp:
  as: '65001'
  router_id: 192.168.255.3
  bgp_defaults:
  - no bgp default ipv4-unicast
  - distance bgp 20 200 200
  - maximum-paths 4 ecmp 4
  peer_groups:
    EVPN-OVERLAY-PEERS:
      type: evpn
      update_source: Loopback0
      remote_as: '65001'
      bfd: true
      password: q+VNViP5i4rVjW1cxFv2wA==
      send_community: all
      maximum_routes: 0
  address_family_ipv4:
    peer_groups:
      EVPN-OVERLAY-PEERS:
        activate: false
  address_family_evpn:
    peer_groups:
      EVPN-OVERLAY-PEERS:
        activate: true
        route_map_in: RM-EVPN-SOO-IN
        route_map_out: RM-EVPN-SOO-OUT
    neighbor_default:
      encapsulation: mpls
      next_hop_self_source_interface: Loopback0
  neighbors:
    192.168.255.1:
      peer_group: EVPN-OVERLAY-PEERS
      description: DC1_P1
    192.168.255.2:
      peer_group: EVPN-OVERLAY-PEERS
      description: DC1_P2
  vrfs:
    TENANT_VRF:
      router_id: 192.168.255.3
      rd: 192.168.255.3:10
      route_targets:
        import:
          evpn:
          - '10:10'
        export:
          evpn:
          - '10:10'
      redistribute_routes:
      - connected
  vlan_aware_bundles:
    TENANT_VRF:
      rd: 192.168.255.3:10
      route_targets:
        both:
        - '10:10'
      redistribute_routes:
      - learned
      vlan: 111
  # vlans:
  # - id: 111
  #   tenant: Tenant_A
  #   rd: 192.168.255.3:10
  #   route_targets:
  #     both:
  #     - '10:10'
  #   redistribute_routes:
  #   - learned
static_routes:
- vrf: MGMT
  destination_address_prefix: 0.0.0.0/0
  gateway: 172.16.2.1
service_routing_protocols_model: multi-agent
ip_routing: true
vlan_internal_order:
  allocation: ascending
  range:
    beginning: 1006
    ending: 1199
name_server:
  source:
    vrf: MGMT
  nodes:
  - 1.1.1.1
  - 8.8.8.8
ntp:
  local_interface:
    vrf: MGMT
    name: Management0
  servers:
    - name: time.google.com
      preferred: true
      iburst: true
      vrf: MGMT
spanning_tree:
  mode: mstp
  mst_instances:
    '0':
      priority: 4096
# AAA Authorization
aaa_authorization:
  exec:
    default: local
local_users:
- name: admin
  privilege: 15
  role: network-admin
  no_password: true
- name: ansible
  privilege: 15
  role: network-admin
  sha512_password: $6$7u4j1rkb3VELgcZE$EJt2Qff8kd/TapRoci0XaIZsL4tFzgq1YZBLD9c6f/knXzvcYY0NcMKndZeCv0T268knGKhOEwZAxqKjlMm920
vrfs:
  MGMT:
    ip_routing: false
  TENANT_VRF:
    tenant: Tenant_A
    ip_routing: true
management_interfaces:
  Management0:
    description: oob_management
    shutdown: false
    vrf: MGMT
    ip_address: 172.16.2.101/24
    gateway: 172.16.2.1
    type: oob
management_api_http:
  enable_vrfs:
    MGMT: {}
  enable_https: true
  # https_ssl_profile: eAPI
loopback_interfaces:
  Loopback0:
    description: EVPN_Overlay_Peering
    shutdown: false
    ip_address: 192.168.255.3/32
    isis_enable: EVPN_UNDERLAY
    isis_passive: true
ethernet_interfaces:
  Ethernet1:
    peer: DC1_P1
    peer_interface: Ethernet1
    peer_type: spine
    description: P2P_LINK_TO_DC1_P1_Ethernet1
    type: routed
    shutdown: false
    ip_address: 172.31.255.1/31
    mtu: 9214
    isis_enable: EVPN_UNDERLAY
    isis_metric: 50
    isis_network_point_to_point: true
  Ethernet2:
    peer: DC1_P2
    peer_interface: Ethernet1
    peer_type: spine
    description: P2P_LINK_TO_DC1_P2_Ethernet1
    type: routed
    shutdown: false
    ip_address: 172.31.255.3/31
    mtu: 9214
    isis_enable: EVPN_UNDERLAY
    isis_metric: 50
    isis_network_point_to_point: true
  # Ethernet3:
  #   peer: client1
  #   peer_interface: Eth1
  #   peer_type: server
  #   description: client1_Eth1
  #   type: switched
  #   shutdown: false
  #   channel_group:
  #     id: 3
  #     mode: active
  # Ethernet4:
  #   peer: client2
  #   peer_interface: Eth1
  #   peer_type: server
  #   description: client2_Eth1
  #   type: switched
  #   shutdown: false
  #   channel_group:
  #     id: 4
  #     mode: active
  Ethernet3:
    peer: client1
    peer_interface: Eth1
    peer_type: server
    description: client1_Eth1
    type: switched
    shutdown: false
    mode: trunk
    vlans: 111
    native_vlan: 111
    # evpn_ethernet_segment:
    #   identifier: 0000:0000:0101:0102:0033
    #   redundancy: "single-active"
    #   # mpls:
    #   #   shared_index: 100
    #   #   tunnel_flood_filter_time: <int>
    #   route_target: 01:01:01:02:00:33
router_isis:
  instance: EVPN_UNDERLAY
  log_adjacency_changes: true
  net: 49.0001.0001.0001.0001.00
  router_id: 192.168.255.3
  is_type: level-2
  address_family:
  - ipv4 unicast
  isis_af_defaults:
  - maximum-paths 2
router_bfd:
  multihop:
    interval: 300
    min_rx: 300
    multiplier: 3
route_maps:
  RM-EVPN-SOO-IN:
    sequence_numbers:
      10:
        type: deny
        match:
        - extcommunity ECL-EVPN-SOO
      20:
        type: permit
  RM-EVPN-SOO-OUT:
    sequence_numbers:
      10:
        type: permit
        set:
        - extcommunity soo 192.168.254.3:1 additive
ip_extcommunity_lists:
  ECL-EVPN-SOO:
  - type: permit
    extcommunities: soo 192.168.254.3:1
ip_igmp_snooping:
  globally_enabled: true
vlans:
  111:
    tenant: Tenant_A
    name: TENANT_VRF_VLAN111
vlan_interfaces:
  Vlan111:
    tenant: Tenant_A
    tags:
    - opzone_pod1
    description: TENANT_VRF_VLAN111
    shutdown: true #testing
    vrf: TENANT_VRF
    ip_address_virtual: 10.1.11.1/24
ip_virtual_router_mac_address: 00:00:00:00:00:01
# port_channel_interfaces:
#   Port-Channel3:
#     description: client1_PortChannel3
#     type: switched
#     shutdown: false
#     mode: trunk
#     vlans: 111
#     esi: 0000:0000:0101:0102:0033
#     rt: 01:01:01:02:00:33
#     lacp_id: 0101.0102.0033
#   Port-Channel4:
#     description: client2_PortChannel4
#     type: switched
#     shutdown: false
#     mode: trunk
#     vlans: 111
#     esi: 0000:0000:0101:0102:0044
#     rt: 01:01:01:02:00:44
#     lacp_id: 0101.0102.0044
mpls:
  ip: true
  ldp:
    router_id: interface Loopback0
    shutdown: false
# management_security:
#   ssl_profiles:
#     - name: eAPI
#       certificate:
#         file: eAPI.crt
#         key: eAPI.key
#       cipher_list: 'HIGH:!eNULL:!aNULL:!MD5:!ADH:!ANULL'